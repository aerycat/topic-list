{"version":3,"sources":["types.ts","ContextStore.ts","constant.ts","api.ts","components/SearchBar.tsx","components/ContentItem.tsx","components/ContentList.tsx","components/GithubIcon.tsx","components/Copyright.tsx","components/Layout.tsx","theme.ts","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SortType","ActionType","initState","list","isLoading","errorMsg","rootReducer","state","type","playload","FETCH_DATA_REQUEST","Object","assign","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","ContextStore","React","createContext","PageSizePresets","queryRepositories","params","topic","sort","per_page","sortStr","uri","fetch","then","res","json","Array","isArray","items","map","item","id","name","full_name","owner","html_url","description","stargazers_count","forks_count","avatar_url","filter","useStyles","makeStyles","theme","root","padding","width","section","display","alignItems","input","marginLeft","spacing","flex","iconButton","divider","height","margin","formControl","minWidth","SearchBar","classes","useState","DEFAULT","sortBy","setSortBy","pageSize","setPageSize","keyword","setKeyword","displayMenu","setDisplayMenu","dispatch","useContext","queryData","a","trim","data","Paper","className","InputBase","onChange","e","target","value","onKeyDown","keyCode","placeholder","inputProps","IconButton","onClick","aria-label","Divider","orientation","color","Fragment","FormControl","InputLabel","htmlFor","Select","values","MenuItem","key","createStyles","inline","starsCount","position","top","right","backgroundColor","palette","secondary","light","starsCountText","fontSize","typography","caption","fontWeight","subtitle2","primary","contrastText","starsCountIcon","marginRight","verticalAlign","ContentItem","props","n","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","Link","href","Typography","component","variant","Math","round","marginTop","minHeight","background","paper","exception","flexDirection","justifyContent","exceptionIcon","paddingBottom","pxToRem","RepositoryList","appState","CircularProgress","length","List","rItem","GitHub","SvgIcon","d","Copyright","align","repository","url","GithubIcon","appBar","layout","breakpoints","up","marginBottom","container","flexWrap","textField","dense","stepper","buttons","button","Layout","CssBaseline","AppBar","Toolbar","noWrap","ContentList","createMuiTheme","main","dark","Header","Helmet","content","App","useReducer","Provider","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40c4f29e.chunk.js","sourcesContent":["import React from 'react'\n\nexport interface RepositoryItem {\n  id: string;\n  name: string;\n  full_name: string;\n  avatar_url: string;\n  html_url: string;\n  description: string;\n  stargazers_count: number;\n  forks_count: number;\n}\n\nexport enum SortType {\n  DEFAULT = 'default',\n  STARS = 'stars',\n  FORKS = 'forks',\n  UPDATED = 'updated'\n}\n\nexport enum ActionType {\n  FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST',\n  FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE',\n  FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS'\n};\n\nexport interface AppState {\n  list: RepositoryItem[],\n  isLoading: boolean,\n  errorMsg: string\n}\n\nexport interface Action {\n  type: ActionType,\n  playload?: any\n}\n\nexport type ContextType = {\n  appState: AppState\n  dispatch: React.Dispatch<Action>\n}","import React from 'react';\nimport { ActionType, Action, AppState, ContextType } from './types'\n\nexport const initState: AppState = {\n  list: [], isLoading: false, errorMsg: 'Enter topic and search'\n};\n\nexport function rootReducer(state: any, { type, playload }: Action) {\n  switch (type) {\n    case ActionType.FETCH_DATA_REQUEST:\n      return Object.assign({}, state, {\n        isLoading: true, errorMsg: ''\n      })\n    case ActionType.FETCH_DATA_SUCCESS:\n      return !!playload ? Object.assign({}, state, { list: playload, isLoading: false, errorMsg: '' }\n      ) : state;\n    case ActionType.FETCH_DATA_FAILURE:\n      return !!playload ? Object.assign({}, state, {\n        list: [], isLoading: false, errorMsg: playload\n      }) : state;\n    default:\n      return state;\n  }\n}\n\nconst ContextStore = React.createContext<ContextType>({} as ContextType);\n\nexport default ContextStore;\n","export const PageSizePresets = [10, 20, 50];\n","import {SortType} from './types'\n\ninterface FetchRepositoriesParams {\n  topic: string, sort: SortType, per_page: number\n}\nconst queryRepositories = (params: FetchRepositoriesParams) => {\n  const { topic, sort, per_page } = params;\n  const sortStr = sort === 'default' ? '' : `&sort=${sort}`\n  const uri = `https://api.github.com/search/repositories?q=topic:${topic}${sortStr}&per_page=${per_page}`;\n  return fetch(uri)\n    .then(res => res.json())\n    .then(res => Array.isArray(res.items) ? res.items : [])\n    .then(res => res.map((item: any) => {\n      const { id = '', name = '', full_name = '', owner = {}, html_url = '', description = '', stargazers_count = 0, forks_count = 0 } = item\n      const { avatar_url = '' } = owner\n      return {\n        id,\n        name,\n        full_name,\n        avatar_url,\n        html_url,\n        description,\n        stargazers_count,\n        forks_count\n      }\n    }))\n    .then(res => res.filter((item: any) => !!item['id']) )\n    // .catch(err => Object.assign({}, FetchRepositoriesResult, { errorMsg: 'something wrong.' }));\n};\n\nexport default queryRepositories\n","import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport { SortType, ActionType } from '../types';\nimport { PageSizePresets } from '../constant';\nimport ContextStore from '../ContextStore';\nimport queryRepositories from '../api';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    width: '100%'\n  },\n  section: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nconst SearchBar: React.FC = () => {\n  const classes = useStyles();\n  const [sortBy, setSortBy] = useState(SortType.DEFAULT);\n  const [pageSize, setPageSize] = useState(10);\n  const [keyword, setKeyword] = useState('');\n  const [displayMenu, setDisplayMenu] = useState(false);\n\n  const { dispatch } = useContext(ContextStore);\n\n  const changeKeyword = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setKeyword(e.target.value as string);\n  };\n  const changeSortBy = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setSortBy(e.target.value as SortType);\n  };\n  const changePageSize = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setPageSize(e.target.value as number);\n  };\n  const toggleDisplayMenu = () => {\n    setDisplayMenu(!displayMenu);\n  };\n  const queryData = async () => {\n    const k = keyword.trim();\n    if (k !== '') {\n      dispatch({ type: ActionType.FETCH_DATA_REQUEST });\n      try {\n        const data = await queryRepositories({\n          topic: keyword,\n          sort: sortBy,\n          per_page: pageSize\n        });\n        dispatch({\n          type: ActionType.FETCH_DATA_SUCCESS,\n          playload: data\n        });\n      } catch (error) {\n        dispatch({\n          type: ActionType.FETCH_DATA_FAILURE,\n          playload: 'something wrong.'\n        });\n      }\n    }\n  };\n  const queryDataByKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 13) {\n      queryData();\n    }\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.section}>\n        <InputBase\n          className={classes.input}\n          onChange={changeKeyword}\n          onKeyDown={queryDataByKeyDown}\n          placeholder=\"topic\"\n          inputProps={{ 'aria-label': 'search google maps' }}\n        />\n        <IconButton\n          onClick={queryData}\n          className={classes.iconButton}\n          aria-label=\"search\"\n        >\n          <SearchIcon />\n        </IconButton>\n        <Divider className={classes.divider} orientation=\"vertical\" />\n        <IconButton\n          onClick={toggleDisplayMenu}\n          className={classes.iconButton}\n          aria-label=\"directions\"\n        >\n          <MenuIcon color={displayMenu ? 'primary' : 'inherit'} />\n        </IconButton>\n      </div>\n      {displayMenu && (\n        <React.Fragment>\n          <Divider orientation=\"horizontal\" />\n          <div className={classes.section}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"label-sort-by\">sort</InputLabel>\n              <Select\n                value={sortBy}\n                onChange={changeSortBy}\n                inputProps={{\n                  name: 'sort',\n                  id: 'label-sort-by'\n                }}\n              >\n                {Object.values(SortType).map((value: string) => (\n                  <MenuItem value={value} key={value}>\n                    {value}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"label-page-size\">quantity</InputLabel>\n              <Select\n                value={pageSize}\n                onChange={changePageSize}\n                inputProps={{\n                  name: 'quantity',\n                  id: 'label-page-size'\n                }}\n              >\n                {PageSizePresets.map(pageSize => (\n                  <MenuItem value={pageSize} key={pageSize}>\n                    {pageSize}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        </React.Fragment>\n      )}\n    </Paper>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport StarIcon from '@material-ui/icons/Star';\n\nimport { RepositoryItem } from '../types';\n\nconst numberShortForK = (n: number): string => {\n  return n > 1000 ? Math.round(n / 1000) + 'k' : `${n}`;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    inline: {\n      display: 'inline'\n    },\n    starsCount: {\n      position: 'absolute',\n      top: 14,\n      right: 8,\n      padding: '0 4px',\n      backgroundColor: theme.palette.secondary.light\n    },\n    starsCountText: {\n      fontSize: theme.typography.caption.fontSize,\n      fontWeight: theme.typography.subtitle2.fontWeight,\n      color: theme.palette.primary.contrastText\n    },\n    starsCountIcon: {\n      marginRight: 1,\n      verticalAlign: 'text-top'\n    }\n  })\n);\n\nconst ContentItem: React.FC<RepositoryItem> = props => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt={props.name} src={props.avatar_url} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Link href={props.html_url} color=\"inherit\" target=\"_blank\">\n              {props.name}\n            </Link>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {props.full_name}\n              </Typography>\n              {props.description ? ` - ${props.description}` : ''}\n            </React.Fragment>\n          }\n        />\n        <div className={classes.starsCount}>\n          <Typography className={classes.starsCountText}>\n            <StarIcon fontSize=\"inherit\" className={classes.starsCountIcon} />\n            {numberShortForK(props.stargazers_count)}\n          </Typography>\n        </div>\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n};\n\nexport default ContentItem;\n","import React, { useContext } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\n\nimport ContentItem from './ContentItem';\nimport ContextStore from '../ContextStore';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: theme.spacing(2),\n      width: '100%',\n      minHeight: 400,\n      backgroundColor: theme.palette.background.paper\n    },\n    exception: {\n      marginTop: theme.spacing(2),\n      width: '100%',\n      minHeight: 400,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    exceptionIcon: {\n      paddingBottom: theme.spacing(1),\n      fontSize: theme.typography.pxToRem(100)\n    }\n  })\n);\n\nconst RepositoryList: React.FC = () => {\n  const classes = useStyles();\n  const { appState } = useContext(ContextStore);\n\n  return appState.isLoading ? (\n    <div className={classes.exception}>\n      <CircularProgress />\n    </div>\n  ) : appState.list.length > 0 ? (\n    <List className={classes.root}>\n      {appState.list.map(rItem => (\n        <ContentItem key={rItem.id} {...rItem} />\n      ))}\n    </List>\n  ) : (\n    <div className={classes.exception}>\n      <BlurOnIcon\n        className={classes.exceptionIcon}\n        fontSize=\"inherit\"\n        color=\"disabled\"\n      />\n      <Typography variant=\"body2\" color=\"textSecondary\">\n        {appState.errorMsg || 'no data.'}\n      </Typography>\n    </div>\n  );\n};\n\nexport default RepositoryList;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nfunction GitHub(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  );\n}\n\nexport default GitHub;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport GithubIcon from './GithubIcon'\nimport {repository} from '../../package.json'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingBottom: theme.spacing(3)\n    }\n  })\n)\n\nconst Copyright: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <Link color=\"inherit\" href={repository.url} target=\"_blank\">\n        <GithubIcon /> \n      </Link>\n    </Typography>\n    </div>\n  );\n}\n\nexport default Copyright","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport SearchBar from './SearchBar'\nimport ContentList from './ContentList'\nimport Copyright from './Copyright'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3)\n    }\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Layout: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            TOPIC SEARCH\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <SearchBar />\n          <ContentList />\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#00796b',\n      light: '#48a999',\n      dark: '#004c40',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#455a64',\n      light: '#718792',\n      dark: '#1c313a',\n      contrastText: '#ffffff'\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport theme from '../theme';\n\nconst Header: React.FC = () => {\n  return (\n    <Helmet>\n      <title>topic list</title>\n      <meta name=\"theme-color\" content={theme.palette.primary.main} />\n    </Helmet>\n  );\n};\n\nexport default Header;\n","import React, { useReducer } from 'react';\nimport ContextStore, { rootReducer, initState } from './ContextStore';\nimport Layout from './components/Layout';\nimport Header from './components/Header';\n\nconst App: React.FC = () => {\n  const [appState, dispatch] = useReducer(rootReducer, initState);\n  return (\n    <div className=\"app\">\n      <ContextStore.Provider value={{ appState, dispatch }}>\n        <Header />\n        <Layout />\n      </ContextStore.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}